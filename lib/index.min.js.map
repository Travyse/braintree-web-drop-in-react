{"version":3,"sources":["../src/index.js"],"names":["_react","_interopRequireDefault","require","_reactDom","_propTypes","_braintreeWebDropIn","DropIn","_callee","_this2","this","_regenerator","wrap","_callee$","_context","prev","next","BraintreeWebDropIn","create","_objectSpread","container","ReactDOM","findDOMNode","wrapper","preselectVaultedPaymentMethod","props","options","instance","sent","on","onNoPaymentMethodRequestable","_this2$props","apply","arguments","onPaymentMethodRequestable","_this2$props2","onPaymentOptionSelected","_this2$props3","onInstance","t0","onError","stop","_callee2","_callee2$","_context2","teardown","shouldComponentUpdate","render","_this3","createElement","ref","React","Component","PropTypes","object","isRequired","bool","func"],"mappings":"wgCAAA,IAAAA,OAAAC,uBAAAC,QAAA,UACA,IAAAC,UAAAF,uBAAAC,QAAA,cACA,IAAAE,WAAAH,uBAAAC,QAAA,eACA,IAAAG,oBAAAJ,uBAAAC,QAAA,+hDAEqBI,6sBAuBnB,SAAAC,UAAA,IAAAC,OAAAC,KAAA,OAAAC,aAAA,WAAAC,MAAA,SAAAC,SAAAC,UAAA,MAAA,EAAA,CAAA,OAAAA,SAAAC,KAAAD,SAAAE,MAAA,KAAA,EAAAF,SAAAC,KAAA,EAAAD,SAAAE,KAAA,EAAA,OAE0BC,oBAAAA,WAAmBC,OAAnBC,cAAA,CACpBC,UAAWC,UAAAA,WAASC,YAAYZ,KAAKa,SACrCC,8BAA+Bd,KAAKe,MAAMD,+BACvCd,KAAKe,MAAMC,UALpB,KAAA,EAEIhB,KAAKiB,SAFTb,SAAAc,KAQIlB,KAAKiB,SAASE,GAAG,8BAA8B,WAC7C,GAAIpB,OAAKgB,MAAMK,6BAA8B,CAAA,IAAAC,cAC3CA,aAAAtB,OAAKgB,OAAMK,6BAAXE,MAAAD,aAAAE,eAIJvB,KAAKiB,SAASE,GAAG,4BAA4B,WAC3C,GAAIpB,OAAKgB,MAAMS,2BAA4B,CAAA,IAAAC,eACzCA,cAAA1B,OAAKgB,OAAMS,2BAAXF,MAAAG,cAAAF,eAIJvB,KAAKiB,SAASE,GAAG,yBAAyB,WACxC,GAAIpB,OAAKgB,MAAMW,wBAAyB,CAAA,IAAAC,eACtCA,cAAA5B,OAAKgB,OAAMW,wBAAXJ,MAAAK,cAAAJ,eAIJ,GAAIvB,KAAKe,MAAMa,WAAY,CACzB5B,KAAKe,MAAMa,WAAW5B,KAAKiB,UA3BjCb,SAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,SAAAC,KAAA,GAAAD,SAAAyB,GAAAzB,SAAA,SAAA,GA8BI,GAAIJ,KAAKe,MAAMe,QAAS,CACtB9B,KAAKe,MAAMe,QAAX1B,SAAAyB,IA/BN,KAAA,GAAA,IAAA,MAAA,OAAAzB,SAAA2B,WAAAjC,QAAAE,KAAA,CAAA,CAAA,EAAA,2PAoCA,SAAAgC,WAAA,OAAA/B,aAAA,WAAAC,MAAA,SAAA+B,UAAAC,WAAA,MAAA,EAAA,CAAA,OAAAA,UAAA7B,KAAA6B,UAAA5B,MAAA,KAAA,EAAA,IACMN,KAAKiB,SADX,CAAAiB,UAAA5B,KAAA,EAAA,MAAA4B,UAAA5B,KAAA,EAAA,OAEUN,KAAKiB,SAASkB,WAFxB,KAAA,EAAA,IAAA,MAAA,OAAAD,UAAAH,WAAAC,SAAAhC,gKAMA,SAAAoC,wBAEE,OAAO,4BAGT,SAAAC,SAAS,IAAAC,OAAAtC,KACP,OAAOT,OAAA,WAAAgD,cAAA,MAAA,CAAKC,IAAK,SAAAA,IAACA,MAAD,OAAUF,OAAKzB,QAAU2B,2BAvEVC,OAAAA,WAAMC,qEAArB7C,qBACE,sDADFA,mBAGA,CACjBmB,QAAS2B,WAAAA,WAAUC,OAAOC,WAE1B/B,8BAA+B6B,WAAAA,WAAUG,KAEzClB,WAAYe,WAAAA,WAAUI,KACtBjB,QAASa,WAAAA,WAAUI,KAEnB3B,6BAA8BuB,WAAAA,WAAUI,KACxCvB,2BAA4BmB,WAAAA,WAAUI,KACtCrB,wBAAyBiB,WAAAA,WAAUI,uCAblBlD,sBAgBG,CACpBiB,8BAA+B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport BraintreeWebDropIn from \"braintree-web-drop-in\";\n\nexport default class DropIn extends React.Component {\n  static displayName = \"BraintreeWebDropIn\";\n\n  static propTypes = {\n    options: PropTypes.object.isRequired,\n    // @deprecated: Include inside options\n    preselectVaultedPaymentMethod: PropTypes.bool,\n\n    onInstance: PropTypes.func,\n    onError: PropTypes.func,\n\n    onNoPaymentMethodRequestable: PropTypes.func,\n    onPaymentMethodRequestable: PropTypes.func,\n    onPaymentOptionSelected: PropTypes.func,\n  };\n\n  static defaultProps = {\n    preselectVaultedPaymentMethod: true,\n  };\n\n  wrapper;\n  instance;\n\n  async componentDidMount() {\n    try {\n      this.instance = await BraintreeWebDropIn.create({\n        container: ReactDOM.findDOMNode(this.wrapper),\n        preselectVaultedPaymentMethod: this.props.preselectVaultedPaymentMethod,\n        ...this.props.options,\n      });\n  \n      this.instance.on(\"noPaymentMethodRequestable\", (...args) => {\n        if (this.props.onNoPaymentMethodRequestable) {\n          this.props.onNoPaymentMethodRequestable(...args);\n        }\n      });\n\n      this.instance.on(\"paymentMethodRequestable\", (...args) => {\n        if (this.props.onPaymentMethodRequestable) {\n          this.props.onPaymentMethodRequestable(...args);\n        }\n      });\n\n      this.instance.on(\"paymentOptionSelected\", (...args) => {\n        if (this.props.onPaymentOptionSelected) {\n          this.props.onPaymentOptionSelected(...args);\n        }\n      });\n\n      if (this.props.onInstance) {\n        this.props.onInstance(this.instance);\n      }\n    } catch (error) {\n      if (this.props.onError) {\n        this.props.onError(error);\n      }\n    }\n  }\n\n  async componentWillUnmount() {\n    if (this.instance) {\n      await this.instance.teardown();\n    }\n  }\n\n  shouldComponentUpdate() {\n    // Static\n    return false;\n  }\n\n  render() {\n    return <div ref={(ref) => (this.wrapper = ref)} />;\n  }\n}\n"]}